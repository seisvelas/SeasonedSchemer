#lang racket

(define (qsort f lst)
  (if (null? lst)
      null
      (let ([pivot (car lst)])
        (append (qsort f (filter (λ (n) (f n pivot)) (cdr lst)))
                (list pivot)
                (qsort f (filter (λ (n) (not (f n pivot))) (cdr lst)))))))


(define a '(a (b (c d))))
(define b '(((d c) b) a))

(printf "The items ~a and ~a are (not actually) equal."
        a b)

